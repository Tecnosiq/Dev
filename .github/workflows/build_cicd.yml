# This is a basic workflow to help you get started with Actions

name: CICD
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  ACR_NAME: tecnosiqacr
  REPO_NAME: testimages
  APP_NAME: prometheus
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Create version tag
        run: echo "VERSION_ID=TEST$(git rev-parse --short HEAD)-$(date +%y%m%d%H%M)" >> $GITHUB_ENV
      - name: Show version ID
        run: echo $VERSION_ID
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Create Docker Image
        run: docker build . -f Dockerfile.prometheus -t ${ACR_NAME}/${REPO_NAME}/${APP_NAME}:${VERSION_ID}
      # Runs a set of commands using the runners shell
      - name: Login to Azure
        uses: azure/docker-login@v1
        with:
          login-server: ${ACR_NAME}.azurecr.io
          username: ${{ secrets.SNSERGIO_AZ_CLIENTID }}
          password: ${{ secrets.SNSERGIO_AZ_PWID }}
      - name: Push Image to ACR
        run: docker push ${ACR_NAME}/${REPO_NAME}/${IMAGE_NAME}:${VERSION_ID}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
